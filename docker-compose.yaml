version: "2"

services:

  api:
    build: https://github.com/SergeyDushkin/HelpDesk.Api.git
    links:
      - authorization-service
      - status-service
      - tickets-service
      - rabbitmq
      - postgres
      - consul
    depends_on:
      - rabbitmq
      - postgres
    ports:
      - '5000:5000'  
    networks:
      - frontend
      - backend

  authorization-service:
    build: https://github.com/SergeyDushkin/HelpDesk.Authorization.git
    networks:
      - frontend
      - backend

  status-service:
    build: https://github.com/SergeyDushkin/HelpDesk.StatusManagementSystem.git
    links:
      - authorization-service
      - rabbitmq
      - postgres
      - consul
    depends_on:
      - rabbitmq
      - postgres
    ports:
      - '10010:10010'  
    networks:
      - frontend
      - backend

  tickets-service:
    build: https://github.com/SergeyDushkin/Servicedesk.Services.Tickets.git
    links:
      - authorization-service
      - rabbitmq
      - postgres
      - consul
    depends_on:
      - rabbitmq
      - postgres
    ports:
      - '10020:10020'  
    networks:
      - frontend
      - backend

  signalr-service:
    build: https://github.com/SergeyDushkin/ServiceDesk.SignalR.git
    links:
      - authorization-service
      - rabbitmq
      - consul
    depends_on:
      - rabbitmq
    ports:
      - '8080:15000' 
    networks:
      - frontend
      - backend

  web:
    build: 
      context: https://github.com/SergeyDushkin/ServiceDesk.Web.git
      args:
        hostip: 52.178.193.205
    environment:
      VIRTUAL_HOST: "http://*/*"
    links:
      - authorization-service
      - signalr-service
      - api
    ports:
      - "80:80"
    networks:
      - frontend
      - backend

  rabbitmq:
    image: rabbitmq:3.6.5-management
    ports:
      - '5672:5672'
      - '15672:15672'
    networks:
      - frontend
      - backend

  postgres:
    container_name: 'postgres'
    image: postgres
    environment:
      - POSTGRES_PASSWORD=!12345Aa
    ports:
      - "5432:5432"
    networks:
      - frontend
      - backend

  consul:
    image: "progrium/consul:latest"
    container_name: "consul"
    hostname: "consul"
    ports:
      - "8400:8400"
      - "8500:8500"
      - "8600:53"
    command: "-server -bootstrap -ui-dir /ui"
    networks:
      - frontend
      - backend

  elasticsearch:
    image: elasticsearch:5.1
    restart: always
    environment:
      ES_JAVA_OPTS: "-Xms1g -Xmx1g"
    ports:
      - 9200:9200
    volumes:
      - ./elasticsearch/data:/usr/share/elasticsearch/data
    networks:
      - frontend
      - backend

  kibana:
    image: kibana:5.1
    restart: always
    ports:
        - 5601:5601
    links:
        - elasticsearch
    networks:
      - frontend
      - backend

  curator:
    image: bobrik/curator
    restart: always
    links:
        - elasticsearch

networks:
  frontend: 
    driver: bridge
  backend:
    driver: bridge